
[TOC]

#项目

##项目目录结构
* src
    - api:数据接口，php
    - img:放置商品图片文件，如果banner、广告图等
    - css:放置css文件
        - img:放置css中使用的图片，如背景图片、图标等装饰图片
        - reset.css   重置性样式（normalize.css）
        - base.css    所有页面公用的样式
        - common.css  公共模块/重复性类
        - index.css
        - style.css
        - ...
    - sass:
    - js:放置js文件
        + common.js   封装的函数
        + index.js    首页js文件
        + 模块.js       
        + ...
    - lib:放置第三方插件类库
        jquery等
    - html
        列表页list.html，商品详情页goods.html，购物车页car.html，注册reg.html，登录login.html
    - index.html:主页
* dist 
构建目录文件
* doc
放置项目文档、需求文档、效果图等


##必做效果
* UI效果
    * 与效果基本一致
    * 移动端适配（自适应布局）
* 数据库
    * 商品表
    * 用户表
    * 购买记录表（可选）

* 首页：
    - 轮播图
    - ajax加载数据

* 列表页：
    - ajax分页加载或懒加载
    - 点击商品进入详情页
    - 价格与时间排序

* 详情页：
    - 根据列表页传入的id获取数据
    - 放大镜
    - 加入购物车效果

* 购物车
    - cookie读取
    - mySQL

* 注册
    - 验证用户名是否被占用
    - 密码加密
* 登录
    - 验证用户名和密码是否正确
    - 登录成功跳转首页
>利用php+mySQL实现注册登录



##必用技术/框架
* git管理项目
* sass编写样式
* requirejs模块化开发
* php+mySQL实现后台接口
* jQuery
* 面向对象开发
* 利用数据库存储数据
    - 商品
    - 用户


##规范
* 统一规范的优点：
    1）团队开发才会变得更有效率
    2）更容易维护

* 所以在项目中：
    1）所有文件统一使用utf-8编码
    2）所有文件命名使用英文字符，包括html文件、css文件、js文件、图片等


* HTML规范
    1）充分利用有语义的html标签
    2）id,class命名尽量做到见名知意
    3）尽量减少多余嵌套
    4、避免“多类症”
        原则：能不添加类就尽量保持文档结构，此处可跟标签语义化结合
    5、避免“多div症”
        原则：应只在没有现有元素能实现区域分割的情况下使用div

* CSS规范
    1）类名、属性名、属性值全部使用小写字母
    2）尽量不要用id去写样式
        考虑样式覆盖的简易性

* javascript规范
    1）每行代码结束必须有分号
    2）变量、函数使用驼峰式命名
    3）命名语义化, 尽可能利用英文单词或其缩写
    4）格式化代码, 并加适量注释

* 图片规范
    1）图片格式仅限于gif、png、jpg
    2）命名全部用小写英文字母、数字、下划线组合，其中不得包含汉字、空格、特殊字符
    3）运用css sprite技术集中小的背景图或图标, 减小页面http请求
    4）装饰性图片放在/css/img文件夹下，其他图片放在/img文件夹下




1.拿到网站名字，找官网；

2.截图：6个 （至少）

注册功能可以略微调整(手机验证码做不了，假的四位数随机验证码)

注册账号把过程体验一次

首页 ：数据渲染只需要做一部分(css一定要写好，百分百还原效果图)
登陆 
注册
列表页
详情页：详情页产品介绍部分，放图片就行，留言功能有两页即可，留言过滤
购物车页  

3.项目需求要理解：

看项目文档需求

必做：前端6个页面和功能实现

选做：后台管理系统，可以进行用户管理、订单管理、商品信息管理


时间安排：

5-7晚自习-11晚自习

12-19号全天做项目。19晚上把代码发给学委


项目验收：

-功能类：
	* 注册：正则验证、sql验证
	* 登陆
	* 首页特效和数据渲染
	* 列表页：分页、排序
	* 详情页：放大镜、小特效、加入购物车
	* 购物车：数量改变、删除、全选、全删
	* 各种表(数据库)
- 项目构建和存储
	* src:开发文档，开发版
	* dist:压缩文件，上线版
	* github/服务器：项目环境搭建和托管
	
网站：可能有多个列表页，多个详情页，选一个作为模板

详情页：内容部分不需要写，放图片即可。

项目更换：

美美箱 黄楚 Z团商城
麦乐购 黄华 壹药网
飞虎乐购 余涛 小米商城
依谷网 李秀珠 京东生鲜






